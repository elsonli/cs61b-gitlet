<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
          "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
          "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!--

  Checkstyle configuration for CS61B.  Modified from sun_checks.xml, which checks the 
  sun coding conventions from:

    - the Java Language Specification at
      http://java.sun.com/docs/books/jls/second_edition/html/index.html

    - the Sun Code Conventions at http://java.sun.com/docs/codeconv/

    - the Javadoc guidelines at
      http://java.sun.com/j2se/javadoc/writingdoccomments/index.html

    - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html

    - some best practices

  For information on configuration, see http://checkstyle.sf.net.

  Most Checks are configurable, be sure to consult the documentation.

  To completely disable a check, just comment it out or delete it from the file.

  Finally, it is worth reading the documentation.

-->

<module name="Checker">
    <!--
        If you set the basedir property below, then all reported file
        names will be relative to the specified directory. See
        http://checkstyle.sourceforge.net/5.x/config.html#Checker

        <property name="basedir" value="${basedir}"/>
    -->
    <property name="basedir" value="${user.dir}"/>

    <!-- Checks whether files end with a new line.                        -->
    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
    <module name="NewlineAtEndOfFile"/>

    <!-- Checks that property files contain the same keys.         -->
    <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
    <module name="Translation"/>
    
    <!-- Checks for Size Violations.                    -->
    <!-- See http://checkstyle.sf.net/config_sizes.html -->
    <module name="FileLength">
         <property name="max" value="2000"/>
    </module>

    <!-- Checks for whitespace                               -->
    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
    <module name="FileTabCharacter"/>

    <module name="TreeWalker">
        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name="ConstantName"/>
        <module name="LocalFinalVariableName">
          <property name="format" value="^([A-Z][0-9]*|[a-z][a-zA-Z0-9]*)$"/>
        </module>
        <module name="LocalVariableName">
          <property name="format" value="^([A-Z][0-9]*|[a-z][a-zA-Z0-9]*)$"/>
        </module>
        <module name="MemberName">
          <property name="format" value="^_?[a-z][a-zA-Z0-9]*$|_?[A-Z]$"/>
        </module>
        <module name="MethodName"/>
        <module name="PackageName">
          <property name="format" 
                    value="^[a-z][a-z0-9_]*(\.[a-zA-Z_][a-zA-Z0-9_]*)*$"/>
        </module>
        <module name="ParameterName">
          <property name="format" value="^([A-Z][0-9]*|[a-z][a-zA-Z0-9]*)$"/>
        </module>
        <module name="StaticVariableName">
          <property name="format" value="^_?[a-z][a-zA-Z0-9]*$|_?[A-Z]$"/>
        </module>
        <module name="TypeName"/>
        <module name="ClassTypeParameterName">
          <property name="format" value="^[A-Z][A-Za-z0-9]*$"/>
        </module>
        <module name="MethodTypeParameterName">
          <property name="format" value="^[A-Z][A-Za-z0-9]*$"/>
        </module>

        <!-- Checks for imports                              -->
        <!-- See http://checkstyle.sf.net/config_import.html -->
        <module name="IllegalImport"/> <!-- defaults to sun.* packages -->
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>

        <!-- Checks for Size Violations.                    -->
        <!-- See http://checkstyle.sf.net/config_sizes.html -->
        <module name="LineLength">
           <property name="max" value="100"/>
        </module>

        <module name="MethodLength">
           <property name="max" value="100"/>
        </module>
        <module name="ParameterNumber">
           <property name="max" value="8"/>
        </module>

        <module name="OuterTypeNumber">
           <property name="max" value="1"/>
        </module>


        <!-- Checks for whitespace                               -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <module name="GenericWhitespace"/>
        <module name="MethodParamPad">
          <property name="allowLineBreaks" value="true"/>
        </module>
        <module name="NoWhitespaceAfter">
          <property name="tokens"
                    value="BNOT,DEC,DOT,INC,LNOT,UNARY_MINUS,UNARY_PLUS"/>
        </module>
        <module name="NoWhitespaceBefore"/>
        <module name="OperatorWrap"/>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>

        <!-- Modifier Checks                                    -->
        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>

        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <module name="EmptyBlock">
          <property name="option" value="stmt"/>
          <property name="tokens" value="LITERAL_DO,LITERAL_ELSE,LITERAL_FINALLY,LITERAL_IF,LITERAL_FOR,LITERAL_TRY,INSTANCE_INIT,STATIC_INIT"/>
        </module>
        <module name="EmptyBlock">
          <property name="option" value="text"/>
          <property name="tokens" value="LITERAL_CATCH,LITERAL_WHILE"/>
        </module>
        <module name="LeftCurly"/>
        <module name="NeedBraces">
            <property name="allowSingleLineStatement" value="true"/>
        </module>
        <module name="RightCurly"/>


        <!-- Checks for common coding problems               -->
        <!-- See http://checkstyle.sf.net/config_coding.html -->
        <!-- <module name="AvoidInlineConditionals"/> -->
        <!--<module name="DoubleCheckedLocking"/>-->
        <module name="EmptyStatement"/>
        <module name="EqualsHashCode"/>
        <module name="HiddenField">
          <property name="ignoreConstructorParameter" value="true"/>
          <property name="ignoreSetter" value="true"/>
        </module>
        <module name="MissingSwitchDefault"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>

        <module name="StringLiteralEquality"/>
        <module name="IllegalCatch">
          <property name="illegalClassNames"
                    value="java.lang.Exception, java.lang.Throwable,
                             java.lang.Error"/>
        </module>
        <module name="FallThrough"/>

        <!-- Checks for class design                         -->
        <!-- See http://checkstyle.sf.net/config_design.html -->
        <!-- <module name="DesignForExtension"/> -->
        <!-- <module name="FinalClass"/> -->
        <!-- <module name="HideUtilityClassConstructor"/> -->
        <module name="VisibilityModifier">
          <property name="protectedAllowed" value="true"/>
          <property name="packageAllowed" value="true"/>
        </module>

        <!-- indentation checks                           -->
        <module name="Indentation">
          <property name="basicOffset" value="4"/>
          <property name="braceAdjustment" value="0"/>
        </module>

        <!-- Miscellaneous other checks.                   -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module name="ArrayTypeStyle"/>
        <module name="TodoComment"/>
        <module name="UpperEll"/>

    </module>

</module>
